#version 330 core
layout (location = 0) in vec3 inPos;
layout (location = 1) in vec3 inNormal;
layout (location = 2) in vec3 inColor;
layout (location = 3) in vec2 inTexCoord;
layout (location = 4) in vec3 inTangent;

out vec3 FragPos;
out vec3 color;
out vec2 TexCoord;
out vec3 surfaceNormal;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
	FragPos = vec3(model * vec4(inPos, 1.0));
	color = inColor;
	TexCoord = inTexCoord;

	mat3 normalMatrix = transpose(inverse(mat3(model)));
	surfaceNormal = normalMatrix * inNormal;

	gl_Position = projection * view * vec4(FragPos, 1.0f);
}